<!--
  The xunit tests in Debugger.Tests aren't truly unit tests - they depend on other stuff that may
  not be in the same directory. This file configures the tests to find what they need. At the moment
  this file is generated in a hardcoded way to support running from the bin directory on our git 
  based build, but once we understand the different environments the tests will need to run in we
  can figure out the right build and deployment strategy for each. Hopefully this configuration offers
  enough flexibility that the tests themselves don't need to change.
-->

<Configuration>
  <RepoRootDir>../../../../..</RepoRootDir>
  <Import ConfigFile="Debugger.Tests.Common.txt" />
  <Import ConfigFile="$(RepoRootDir)/.dotnet/Debugger.Tests.Versions.txt" />

  <TestProduct>ProjectK</TestProduct>
  <ScriptRootDir>$(RepoRootDir)/src/SOS/SOS.UnitTests/Scripts</ScriptRootDir>
  <RootBinDir>$(RepoRootDir)/artifacts</RootBinDir>
  <InstallDir>$(RootBinDir)/bin/$(OS).$(TargetArchitecture).$(TargetConfiguration)</InstallDir>
  <LogDir>$(RootBinDir)/TestResults/$(TargetConfiguration)/sos.unittests_$(Timestamp)</LogDir>
  <DumpDir>$(RootBinDir)/tmp/$(TargetConfiguration)\dumps</DumpDir>
  
  <DebuggeeSourceRoot>$(RepoRootDir)/src/SOS/SOS.UnitTests/Debuggees</DebuggeeSourceRoot>
  <DebuggeeBuildProcess>sdk.prebuilt</DebuggeeBuildProcess>
  <DebuggeeBuildRoot>$(RootBinDir)</DebuggeeBuildRoot>
  <CliPath>$(RepoRootDir)/.dotnet/dotnet</CliPath>

  <NuGetPackageFeeds>
      myget.org dotnet-core=https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;
      nuget.org=https://www.nuget.org/api/v2/
  </NuGetPackageFeeds>

  <Options>
    <!--
        Default (prebuilt)
      -->
    <Option>
      <!-- The debuggee built for 3.0 but run it on latest -->
      <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersionLatest)</RuntimeFrameworkVersion>
    </Option>
    <Option>
      <!-- The debuggee built for 3.0 but run it on 3.1 -->
      <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersion31)</RuntimeFrameworkVersion>
    </Option>
    <Option Condition="'$(DailyTest)' != 'true'">
      <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersion30)</RuntimeFrameworkVersion>
    </Option>
    <Option Condition="'$(DailyTest)' != 'true'">
      <BuildProjectFramework>netcoreapp2.1</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersion21)</RuntimeFrameworkVersion>
    </Option>
    <!--
        SOS.StackAndOtherTests (cli because tested with embedded and portable PDBs)
      -->
    <Option>
      <DebuggeeBuildProcess>cli</DebuggeeBuildProcess>
      <DebuggeeBuildRoot>$(RootBinDir)/Debuggees</DebuggeeBuildRoot>
      <TestName>SOS.StackAndOtherTests</TestName>
      <Options>
        <Option>
          <!-- Build the debuggee for 3.0 but run it on latest -->
          <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
          <BuildProjectMicrosoftNetCoreAppVersion>$(RuntimeVersion30)</BuildProjectMicrosoftNetCoreAppVersion>
          <RuntimeFrameworkVersion>$(RuntimeVersionLatest)</RuntimeFrameworkVersion>
        </Option>
        <Option>
          <!-- Build the debuggee for 3.0 but run it on 3.1 -->
          <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
          <BuildProjectMicrosoftNetCoreAppVersion>$(RuntimeVersion30)</BuildProjectMicrosoftNetCoreAppVersion>
          <RuntimeFrameworkVersion>$(RuntimeVersion31)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(DailyTest)' != 'true'">
          <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
          <BuildProjectMicrosoftNetCoreAppVersion>$(RuntimeVersion30)</BuildProjectMicrosoftNetCoreAppVersion>
          <RuntimeFrameworkVersion>$(RuntimeVersion30)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(DailyTest)' != 'true'">
          <BuildProjectFramework>netcoreapp2.1</BuildProjectFramework>
          <BuildProjectMicrosoftNetCoreAppVersion>$(RuntimeVersion21)</BuildProjectMicrosoftNetCoreAppVersion>
          <RuntimeFrameworkVersion>$(RuntimeVersion21)</RuntimeFrameworkVersion>
        </Option>
      </Options>
    </Option>
    <!--
        SOS.WebApp3 (runs on 3.0, 3.1 and latest aspnetcore)
      -->
    <Option>
      <TestName>SOS.WebApp3</TestName>
      <Options>
        <!-- Build the debuggee for 3.0 but run it on latest -->
        <!--
        <Option>
          <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(AspNetCoreVersionLatest)</RuntimeFrameworkVersion>
        </Option>
        -->
        <Option>
          <!-- Build the debuggee for 3.0 but run it on 3.1 -->
          <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(AspNetCoreVersion31)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(DailyTest)' != 'true'">
          <BuildProjectFramework>netcoreapp3.0</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(AspNetCoreVersion30)</RuntimeFrameworkVersion>
        </Option>
      </Options>
    </Option>
  </Options>

  <HostExe>$(RepoRootDir)/.dotnet/dotnet</HostExe>
  <HostArgs>--fx-version $(RuntimeFrameworkVersion)</HostArgs>
  <RuntimeSymbolsPath>$(RepoRootDir)/.dotnet/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</RuntimeSymbolsPath>
  <LLDBHelperScript>$(ScriptRootDir)/lldbhelper.py</LLDBHelperScript>

  <Options>
    <Option Condition="$(OS) == Linux">
      <SOSPath>$(InstallDir)/libsosplugin.so</SOSPath>
      <DotNetDumpPath>$(RootBinDir)/bin/dotnet-dump/$(TargetConfiguration)/netcoreapp2.1/publish/dotnet-dump.dll</DotNetDumpPath>
      <DebuggeeDumpOutputRootDir>$(DumpDir)/$(TestProduct)/$(RuntimeFrameworkVersion)/$(BuildProjectFramework)</DebuggeeDumpOutputRootDir>
      <DebuggeeDumpInputRootDir>$(DebuggeeDumpOutputRootDir)</DebuggeeDumpInputRootDir>
    </Option>
    <Option Condition="$(OS) == OSX">
      <SOSPath>$(InstallDir)/libsosplugin.dylib</SOSPath>
      <!-- Dump testing is disabled on macOS. gdb can't run processes because it needs to be codesigned and lldb on macOS's "process save-core" is too slow -->
    </Option>
  </Options>

</Configuration>
