<!--
  The xunit tests in Debugger.Tests aren't truly unit tests - they depend on other stuff that may
  not be in the same directory. This file configures the tests to find what they need. At the moment
  this file is generated in a hard coded way to support running from the bin directory on our git
  based build, but once we understand the different environments the tests will need to run in we
  can figure out the right build and deployment strategy for each. Hopefully this configuration offers
  enough flexibility that the tests themselves don't need to change.
-->

<Configuration>
  <RepoRootDir>../../../../..</RepoRootDir>
  <DotNetRoot>$(RepoRootDir)/.dotnet-test</DotNetRoot>

  <Import ConfigFile="Debugger.Tests.Common.txt" />
  <Import ConfigFile="$(DotNetRoot)/Debugger.Tests.Versions.txt" />

  <TestProduct>ProjectK</TestProduct>
  <ScriptRootDir>$(RepoRootDir)/src/SOS/SOS.UnitTests/Scripts</ScriptRootDir>
  <RootBinDir>$(RepoRootDir)/artifacts</RootBinDir>
  <InstallDir>$(RootBinDir)/bin/$(OS).$(TargetArchitecture).$(TargetConfiguration)</InstallDir>
  <LogDir>$(RootBinDir)/TestResults/$(TargetConfiguration)/sos.unittests_$(Timestamp)</LogDir>
  <DumpDir>$(RootBinDir)/tmp/$(TargetConfiguration)\dumps</DumpDir>

  <TestWebApp3>true</TestWebApp3>
  <TestWebApp3 Condition="'$(InternalReleaseTesting)' == 'true'">false</TestWebApp3>

  <TestRuntime21>true</TestRuntime21>
  <TestRuntime21 Condition="'$(RuntimeVersion21)' == ''">false</TestRuntime21>
  <TestRuntime21 Condition="'$(TargetArchitecture)' == 'arm'">false</TestRuntime21>
  <TestRuntime21 Condition="'$(TargetArchitecture)' == 'arm64'">false</TestRuntime21>

  <TestDotnetDumpCommandsWithRuntime21>true</TestDotnetDumpCommandsWithRuntime21>
  <TestDotnetDumpCommandsWithRuntime21 Condition="'$(RuntimeVersion21)' == ''">false</TestDotnetDumpCommandsWithRuntime21>
  <TestDotnetDumpCommandsWithRuntime21 Condition="'$(OS)' == 'Linux'">false</TestDotnetDumpCommandsWithRuntime21>

  <!-- Build the debuggee for this framework version but run it on latest -->
  <BuildProjectFrameworkLatest Condition="StartsWith('$(RuntimeVersionLatest)', '6')">net5.0</BuildProjectFrameworkLatest>
  <BuildProjectFrameworkLatest Condition="StartsWith('$(RuntimeVersionLatest)', '5')">net5.0</BuildProjectFrameworkLatest>
  <BuildProjectFrameworkLatest Condition="StartsWith('$(RuntimeVersionLatest)', '3.1')">netcoreapp3.1</BuildProjectFrameworkLatest>
  <BuildProjectFrameworkLatest Condition="StartsWith('$(RuntimeVersionLatest)', '2.1')">netcoreapp2.1</BuildProjectFrameworkLatest>

  <DebuggeeSourceRoot>$(RepoRootDir)/src/SOS/SOS.UnitTests/Debuggees</DebuggeeSourceRoot>
  <DebuggeeBuildProcess>sdk.prebuilt</DebuggeeBuildProcess>
  <DebuggeeBuildRoot>$(RootBinDir)</DebuggeeBuildRoot>
  <CliPath>$(DotNetRoot)/dotnet</CliPath>

  <NuGetPackageFeeds>
      myget.org dotnet-core=https://dotnet.myget.org/F/dotnet-core/api/v3/index.json;
      nuget.org=https://www.nuget.org/api/v2/
  </NuGetPackageFeeds>

  <Options>
    <!--
        Default (prebuilt)
      -->
    <Option Condition="'$(RuntimeVersionLatest)' != ''">
      <BuildProjectFramework>$(BuildProjectFrameworkLatest)</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersionLatest)</RuntimeFrameworkVersion>
      <SetHostRuntime>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</SetHostRuntime>
    </Option>
    <Option Condition="'$(RuntimeVersion50)' != ''">
      <BuildProjectFramework>net5.0</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersion50)</RuntimeFrameworkVersion>
    </Option>
    <Option Condition="'$(RuntimeVersion31)' != ''">
      <BuildProjectFramework>netcoreapp3.1</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersion31)</RuntimeFrameworkVersion>
      <SetHostRuntime>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</SetHostRuntime>
    </Option>
    <Option Condition="'$(TestRuntime21)' == 'true'">
      <BuildProjectFramework>netcoreapp2.1</BuildProjectFramework>
      <RuntimeFrameworkVersion>$(RuntimeVersion21)</RuntimeFrameworkVersion>
      <SetHostRuntime>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</SetHostRuntime>
    </Option>
    <!--
        SOS.StackAndOtherTests (cli because tested with embedded and portable PDBs)
      -->
    <Option>
      <DebuggeeBuildProcess>cli</DebuggeeBuildProcess>
      <DebuggeeBuildRoot>$(RootBinDir)/Debuggees</DebuggeeBuildRoot>
      <TestName>SOS.StackAndOtherTests</TestName>
      <Options>
        <Option Condition="'$(RuntimeVersionLatest)' != ''">
          <BuildProjectFramework>$(BuildProjectFrameworkLatest)</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersionLatest)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(RuntimeVersion50)' != ''">
          <BuildProjectFramework>net5.0</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion50)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(RuntimeVersion31)' != ''">
          <BuildProjectFramework>netcoreapp3.1</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion31)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(TestRuntime21)' == 'true'">
          <BuildProjectFramework>netcoreapp2.1</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion21)</RuntimeFrameworkVersion>
        </Option>
      </Options>
    </Option>
    <!--
        SOS.WebApp3 (runs on 3.1 and latest aspnetcore)
      -->
    <Option Condition="'$(TestWebApp3)' == 'true'">
      <TestName>SOS.WebApp3</TestName>
      <Options>
        <Option Condition="'$(AspNetCoreVersionLatest)' != ''">
          <BuildProjectFramework>$(BuildProjectFrameworkLatest)</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersionLatest)</RuntimeFrameworkVersion>
          <FrameworkVersion>$(AspNetCoreVersionLatest)</FrameworkVersion>
        </Option>
        <Option Condition="'$(AspNetCoreVersion50)' != ''">
          <BuildProjectFramework>net5.0</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion50)</RuntimeFrameworkVersion>
          <FrameworkVersion>$(AspNetCoreVersion50)</FrameworkVersion>
        </Option>
        <Option Condition="'$(AspNetCoreVersion31)' != ''">
          <BuildProjectFramework>netcoreapp3.1</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion31)</RuntimeFrameworkVersion>
          <FrameworkVersion>$(AspNetCoreVersion31)</FrameworkVersion>
        </Option>
      </Options>
    </Option>
    <!--
        DotnetDumpCommands (runs on every runtime except netcore2.1 on Linux)
      -->
    <Option>
      <Options>
        <Option>
          <TestName>DotnetDumpCommands</TestName>
        </Option>
      </Options>
      <Options>
        <Option Condition="'$(RuntimeVersionLatest)' != ''">
          <BuildProjectFramework>$(BuildProjectFrameworkLatest)</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersionLatest)</RuntimeFrameworkVersion>
          <SetHostRuntime>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</SetHostRuntime>
        </Option>
        <Option Condition="'$(RuntimeVersion50)' != ''">
          <BuildProjectFramework>net5.0</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion50)</RuntimeFrameworkVersion>
        </Option>
        <Option Condition="'$(RuntimeVersion31)' != ''">
          <BuildProjectFramework>netcoreapp3.1</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion31)</RuntimeFrameworkVersion>
          <SetHostRuntime>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</SetHostRuntime>
        </Option>
        <Option Condition="'$(TestDotnetDumpCommandsWithRuntime21)' == 'true'">
          <BuildProjectFramework>netcoreapp2.1</BuildProjectFramework>
          <RuntimeFrameworkVersion>$(RuntimeVersion21)</RuntimeFrameworkVersion>
          <SetHostRuntime>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</SetHostRuntime>
        </Option>
      </Options>
    </Option>
  </Options>

  <FrameworkVersion Condition="'$(FrameworkVersion)' == ''">$(RuntimeFrameworkVersion)</FrameworkVersion>
  <RuntimeSymbolsPath>$(DotNetRoot)/shared/Microsoft.NETCore.App/$(RuntimeFrameworkVersion)</RuntimeSymbolsPath>
  <LLDBHelperScript>$(ScriptRootDir)/lldbhelper.py</LLDBHelperScript>
  <HostExe>$(DotNetRoot)/dotnet</HostExe>
  <HostArgs>--fx-version $(FrameworkVersion)</HostArgs>

  <Options>
    <Option Condition="$(OS) == Linux">
      <SOSPath>$(InstallDir)/libsosplugin.so</SOSPath>
    </Option>
    <Option Condition="$(OS) == OSX">
      <SOSPath>$(InstallDir)/libsosplugin.dylib</SOSPath>
    </Option>
  </Options>

  <DotNetDumpHost>$(DotNetRoot)/dotnet</DotNetDumpHost>
  <DotNetDumpPath>$(RootBinDir)/bin/dotnet-dump/$(TargetConfiguration)/netcoreapp2.1/publish/dotnet-dump.dll</DotNetDumpPath>
  <DebuggeeDumpOutputRootDir>$(DumpDir)/$(TestProduct)/$(RuntimeFrameworkVersion)/$(BuildProjectFramework)</DebuggeeDumpOutputRootDir>
  <DebuggeeDumpInputRootDir>$(DebuggeeDumpOutputRootDir)</DebuggeeDumpInputRootDir>

</Configuration>
