#
# Tests various SOS GC and object based commands on the pinned object heap (POH).
#
# Commands Verified: GCWhere, GCRoot, DumpObj, DumpHeap, DumpStackObjects
#
# 1) Run to the first debug break
# 2) Load sos
# 3) Dump stack objects to get the address of GCWhere!temp
# 4) Run various commands on the address, verify POH
#11) Let the program run to completion

# Continue to the DebugBreak
CONTINUE
IFDEF:CDB
VERIFY:Break instruction exception - code 80000003
ENDIF:CDB

LOADSOS

SOSCOMMAND:DumpStackObjects
VERIFY:<HEXVAL>\s+<HEXVAL>\s+System.Byte\[\]\s+

SOSCOMMAND:DumpObj <POUT>\w+\s+(<HEXVAL>)\s+(System.Byte\[\]!\$0_)*System.Byte\[\]\s+<POUT>
VERIFY:\s+Name:        System.Byte\[\]\s+
VERIFY:\s+Array:       Rank 1, Number of elements 100, Type Byte\s+

SOSCOMMAND:GCWhere <PREVPOUT>
# we care that the Gen is 4 (POH)
VERIFY:<HEXVAL>\s+4\s+\d\s+<HEXVAL>\s+<HEXVAL>\s+<HEXVAL>\s+0x<HEXVAL>\s*\(\d+\)

SOSCOMMAND:GCRoot <PREVPOUT>
VERIFY:.*Thread <HEXVAL>:
VERIFY:\s+<HEXVAL>\s+<HEXVAL>\s+GCPOH\.Main\(\)\s+\[.*[Gg][Cc][Pp][Oo][Hh]\.cs\s+@\s+19\]\s+

SOSCOMMAND:GCRoot -all <PREVPOUT>
VERIFY:.*Thread <HEXVAL>:
VERIFY:\s+<HEXVAL>\s+<HEXVAL>\s+GCPOH\.Main\(\)\s+\[.*[Gg][Cc][Pp][Oo][Hh]\.cs\s+@\s+19\]\s+

SOSCOMMAND:DumpHeap
VERIFY:\s+<HEXVAL>\s+<HEXVAL>\s+<DECVAL>\s+

SOSCOMMAND:DumpHeap -stat
VERIFY:\s*Statistics:\s+
VERIFY:\s+MT\s+Count\s+TotalSize\s+Class\s+Name\s+
VERIFY:\s+<HEXVAL>\s+<DECVAL>\s+<DECVAL>\s+System.Byte\[\]\s+

SOSCOMMAND:EEHeap
VERIFY:\s*Loader Heap:\s+
VERIFY:\s+System Domain:\s+<HEXVAL>\s+
VERIFY:\s+LowFrequencyHeap:\s+<HEXVAL>.*bytes.*\s+
VERIFY:\s+HighFrequencyHeap:\s+<HEXVAL>.*bytes.*\s+
VERIFY:\s+Total size:\s+Size:\s+0x<HEXVAL>\s+\(<DECVAL>|lu\)\s+bytes\.\s+
VERIFY:\s+Jit code heap:\s+
VERIFY:\s+LoaderCodeHeap:\s+<HEXVAL>.*bytes\.\s+
VERIFY:\s+Total LoaderHeap size:\s+Size:\s+0x<HEXVAL>\s+\(<DECVAL>|lu\)\s+bytes\.\s+
VERIFY:\s+Number of GC Heaps:\s+<DECVAL>\s+
VERIFY:\s+generation\s+<DECVAL>\s+starts\s+at\s+0x<HEXVAL>\s+
VERIFY:\s+generation\s+<DECVAL>\s+starts\s+at\s+0x<HEXVAL>\s+
VERIFY:\s+generation\s+<DECVAL>\s+starts\s+at\s+0x<HEXVAL>\s+
VERIFY:\s+segment\s+begin\s+allocated\s+size\s+
VERIFY:\s+<HEXVAL>\s+<HEXVAL>\s+<HEXVAL>\s+0x<HEXVAL>\(<DECVAL>\)
VERIFY:\s+Large object heap starts at 0x<HEXVAL>\s+
VERIFY:\s+Pinned object heap starts at 0x<HEXVAL>\s+

# Continue to the next DebugBreak
CONTINUE
