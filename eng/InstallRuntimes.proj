<Project>
  <!--
     $(BuildArch) - architecture to test (x64, x86, arm, arm64). Defaults to x64.
     $(DailyTest) - if true, only install/test the latest (master branch) runtime
     
     From Versions.props:

     $(MicrosoftNETCoreAppVersion)   $(MicrosoftAspNetCoreAppRefVersion) - latest dotnet runtime/aspnetcore version to install/test
     $(MicrosoftNETCoreApp31Version) $(MicrosoftAspNetCoreApp31Version)  - 3.1 version
     $(MicrosoftNETCoreApp30Version) $(MicrosoftAspNetCoreApp30Version)  - 3.0 version
     $(MicrosoftNETCoreApp21Version) $(MicrosoftAspNetCoreApp21Version)  - 2.1 version

     From Arcade:

     $(DotNetRoot) - the SDK/runtime installation root
     $(RepositoryEngineeringDir) - the "eng" directory
     $(VersionsPropsPath) - path of Versions.props
  -->

  <PropertyGroup>
    <DailyTest Condition="'$(DailyTest)' == ''">false</DailyTest>
    <BuildArch Condition="'$(BuildArch)' == ''">$(Platform)</BuildArch>
    <BuildArch Condition="'$(BuildArch)' == ''">x64</BuildArch>
    <CommonInstallArgs>-architecture $(BuildArch)</CommonInstallArgs>
    <TestConfigFileName Condition="'$(BuildArch)' != 'x86'">$(DotNetRoot)Debugger.Tests.Versions.txt</TestConfigFileName>
    <TestConfigFileName Condition="'$(BuildArch)' == 'x86'">$(DotNetRoot)x86\Debugger.Tests.Versions.txt</TestConfigFileName>
  </PropertyGroup>

  <Choose>
    <When Condition="$([MSBuild]::IsOsPlatform(Windows))">
      <PropertyGroup>
        <PowershellWrapper>powershell -NonInteractive -ExecutionPolicy ByPass -NoProfile -command</PowershellWrapper>
        <DotnetInstallScriptCmd>'$(RepositoryEngineeringDir)common\dotnet-install.ps1'</DotnetInstallScriptCmd>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <DotnetInstallScriptCmd>$(RepositoryEngineeringDir)common/dotnet-install.sh</DotnetInstallScriptCmd>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <ItemGroup>
    <!-- We always test on latest, so install that one even for scheduled builds -->
    <TestVersions Include="Latest" RuntimeVersion="$(MicrosoftNETCoreAppVersion)" AspNetVersion="$(MicrosoftAspNetCoreAppRefVersion)" Install="true" />
    <TestVersions Include="31" RuntimeVersion="$(MicrosoftNETCoreApp31Version)" AspNetVersion="$(MicrosoftAspNetCoreApp31Version)" Install="!$(DailyTest)" />
    <TestVersions Include="30" RuntimeVersion="$(MicrosoftNETCoreApp30Version)" AspNetVersion="$(MicrosoftAspNetCoreApp30Version)" Install="!$(DailyTest)" />
    <TestVersions Include="21" RuntimeVersion="$(MicrosoftNETCoreApp21Version)" AspNetVersion="$(MicrosoftAspNetCoreApp21Version)" Install="!$(DailyTest)" />
  </ItemGroup>

  <Target Name="InstallTestRuntimes" 
          BeforeTargets="RunTests"
          DependsOnTargets="InstallRuntimesWindows;InstallRuntimesUnix;WriteTestVersionManifest" />

  <Target Name="InstallRuntimesWindows"
          Condition="$([MSBuild]::IsOsPlatform(Windows))"
          Inputs="$(VersionsPropsPath)" Outputs="$(TestConfigFileName)">

    <Exec Command="$(PowershellWrapper) &quot;&amp; { &amp;$(DotnetInstallScriptCmd) $(CommonInstallArgs) -version %(TestVersions.RuntimeVersion) -runtime dotnet }&quot;"
          Condition="%(TestVersions.Install)" />

    <Exec Command="$(PowershellWrapper) &quot;&amp; { &amp;$(DotnetInstallScriptCmd) $(CommonInstallArgs) -version %(TestVersions.AspNetVersion) -runtime aspnetcore }&quot;"
          Condition="%(TestVersions.Install)" />
  </Target>

  <Target Name="InstallRuntimesUnix"
          Condition="!$([MSBuild]::IsOsPlatform(Windows))"
          Inputs="$(VersionsPropsPath)" Outputs="$(TestConfigFileName)">

    <Exec Command="$(DotnetInstallScriptCmd) $(CommonInstallArgs) -version %(TestVersions.RuntimeVersion) -runtime dotnet"
          IgnoreStandardErrorWarningFormat="true"
          Condition="%(TestVersions.Install)" />

    <Exec Command="$(DotnetInstallScriptCmd) $(CommonInstallArgs) -version %(TestVersions.AspNetVersion) -runtime aspnetcore"
          IgnoreStandardErrorWarningFormat="true"
          Condition="%(TestVersions.Install)" />
   </Target>

  <Target Name="WriteTestVersionManifest" Inputs="$(VersionsPropsPath)" Outputs="$(TestConfigFileName)">
    <PropertyGroup>
      <TestConfigFileLines>
<![CDATA[
<Configuration>
  <DailyTest>$(DailyTest)</DailyTest>
  <RuntimeVersion21>$(MicrosoftNETCoreApp21Version)</RuntimeVersion21>
  <AspNetCoreVersion21>$(MicrosoftAspNetCoreApp21Version)</AspNetCoreVersion21>
  <RuntimeVersion30>$(MicrosoftNETCoreApp30Version)</RuntimeVersion30>
  <AspNetCoreVersion30>$(MicrosoftAspNetCoreApp30Version)</AspNetCoreVersion30>
  <RuntimeVersion31>$(MicrosoftNETCoreApp31Version)</RuntimeVersion31>
  <AspNetCoreVersion31>$(MicrosoftAspNetCoreApp31Version)</AspNetCoreVersion31>
  <RuntimeVersionLatest>$(MicrosoftNETCoreAppVersion)</RuntimeVersionLatest>
  <AspNetCoreVersionLatest>$(MicrosoftAspNetCoreAppRefVersion)</AspNetCoreVersionLatest>
</Configuration>
]]>
     </TestConfigFileLines>
    </PropertyGroup>

    <WriteLinesToFile File="$(TestConfigFileName)" Lines="$(TestConfigFileLines)" Overwrite="true" WriteOnlyWhenDifferent="true" />
    <Message Importance="High" Text="Created config file $(TestConfigFileName)" />

    <ItemGroup>
      <FileWrites Include="$(TestConfigFileName)" />
    </ItemGroup>
  </Target>
</Project>
