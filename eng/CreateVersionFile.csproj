<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <Target Name="Build" />
  <Target Name="Restore" />

  <Target Name="GenerateVersionFiles" DependsOnTargets="GenerateVersionPrefixFile;GenerateVersionHeader;GenerateVersionSourceFile" />

  <Target Name="GenerateVersionPrefixFile" Condition="'$(VersionPrefixFile)' != ''">
    <ItemGroup>
      <VersionPrefixLines Include="$(VersionPrefix)" />
    </ItemGroup>
    <WriteLinesToFile File="$(VersionPrefixFile)" Lines="@(VersionPrefixLines)" Overwrite="true" />
  </Target>

  <Target Name="GenerateVersionHeader" DependsOnTargets="GetAssemblyVersion;AddSourceRevisionToInformationalVersion" Condition="'$(NativeVersionHeaderFile)' != '' and '$(GenerateVersionHeader)' == 'true'">
    <Error Condition="'$(FileVersion)' == ''" Text="Unable to obtain version information." />

    <PropertyGroup>
      <FileMajor>$(FileVersion.Split('.')[0])</FileMajor>
      <FileMinor>$(FileVersion.Split('.')[1])</FileMinor>
      <FilePatch>$(FileVersion.Split('.')[2])</FilePatch>
      <FileRevision>$(FileVersion.Split('.')[3])</FileRevision>
    </PropertyGroup>

    <Message Importance="High" Text="Version suffix data not found in build process" Condition="'$(VersionSuffixDateStamp)' == ''" />
    <PropertyGroup>
      <VersionSuffixDateStamp Condition="'$(VersionSuffixDateStamp)' == ''">42</VersionSuffixDateStamp>
      <VersionSuffixBuildOfTheDay Condition="'$(VersionSuffixBuildOfTheDay)' == ''">42424</VersionSuffixBuildOfTheDay>
    </PropertyGroup>

    <PropertyGroup>
      <NativeVersionLines>
        <![CDATA[
#ifndef VER_COMPANYNAME_STR
#define VER_COMPANYNAME_STR         "Microsoft Corporation"
#endif
#ifndef VER_PRODUCTNAME_STR
#define VER_PRODUCTNAME_STR         "Microsoft\xae .NET Framework"
#endif
#undef VER_PRODUCTVERSION
#define VER_PRODUCTVERSION          $(FileMajor),$(FileMinor),$(VersionSuffixDateStamp),$(VersionSuffixBuildOfTheDay)
#undef VER_PRODUCTVERSION_STR
#define VER_PRODUCTVERSION_STR      "$(InformationalVersion)"
#undef VER_FILEVERSION
#define VER_FILEVERSION             $(FileMajor),$(FileMinor),$(FilePatch),$(FileRevision)
#undef VER_FILEVERSION_STR
#define VER_FILEVERSION_STR         "$(FileVersion)"
#ifndef VER_LEGALCOPYRIGHT_STR
#define VER_LEGALCOPYRIGHT_STR      "\xa9 Microsoft Corporation. All rights reserved."
#endif
]]>
      </NativeVersionLines>
    </PropertyGroup>

    <WriteLinesToFile File="$(NativeVersionHeaderFile)" Lines="$(NativeVersionLines.Replace(';', '%3B'))" Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(NativeVersionHeaderFile)" />
    </ItemGroup>

    <Message Importance="High" Text="Created version file $(NativeVersionHeaderFile)" />
  </Target>

  <!-- Non Windows versioning requires to generate a source file and include it on the compilation. -->
  <Target Name="GenerateVersionSourceFile" DependsOnTargets="GetAssemblyVersion;AddSourceRevisionToInformationalVersion" Condition="'$(NativeVersionSourceFile)' != '' and '$(GenerateVersionSourceFile)' == 'true' and !Exists($(NativeVersionHeaderFile))">

    <!-- Get Username -->
    <PropertyGroup>
      <VersionUserName Condition="'$(VersionUserName)' == ''">$(USERNAME)</VersionUserName>
    </PropertyGroup>

    <Exec Command="whoami" Condition="'$(VersionUserName)' == ''" StandardOutputImportance="Low" IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="VersionUserName" />
    </Exec>

    <!-- Get Hostname -->
    <PropertyGroup>
      <VersionHostName Condition="'$(VersionHostName)' == ''">$(COMPUTERNAME)</VersionHostName>
    </PropertyGroup>

    <Exec Command="hostname" Condition="'$(RunningOnUnix)'=='true' AND '$(VersionHostName)'==''" StandardOutputImportance="Low" IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="VersionHostName" />
    </Exec>

    <PropertyGroup>
      <BuiltByString Condition="'$(VersionUserName)' != '' AND '$(VersionHostName)' != ''">$(BuiltByString) %40BuiltBy: $(VersionUserName)-$(VersionHostName)</BuiltByString>
    </PropertyGroup>

    <PropertyGroup>
      <NativeVersionLines>
<![CDATA[
static char sccsid[] __attribute__((used)) = "@(#)Version $(InformationalVersion)$(BuiltByString)";
 ]]>
      </NativeVersionLines>
    </PropertyGroup>

    <WriteLinesToFile File="$(NativeVersionSourceFile)" Lines="$(NativeVersionLines.Replace(';', '%3B'))" Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(NativeVersionSourceFile)" />
    </ItemGroup>

    <Message Importance="High" Text="Created version file $(NativeVersionSourceFile)" />
  </Target>
</Project>
