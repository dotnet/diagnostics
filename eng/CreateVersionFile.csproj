<!-- All Rights Reserved. Licensed to the .NET Foundation under one or more agreements. The .NET Foundation licenses this file to you under the MIT license. See the LICENSE file in the project root for more information. -->
<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
  </PropertyGroup>

  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <Target Name="Build" />

  <Target Name="GenerateVersionFiles" DependsOnTargets="GenerateVersionHeader;GenerateVersionSourceFile" />

  <Target Name="GenerateVersionHeader" DependsOnTargets="GetAssemblyVersion;AddSourceRevisionToInformationalVersion" Condition="'$(NativeVersionHeaderFile)' != '' and '$(GenerateVersionHeader)' == 'true' and !Exists($(NativeVersionHeaderFile))">

    <PropertyGroup Condition="'$(VersionSuffixDateStamp)' == ''">
      <_FileMajor>42</_FileMajor>
      <_FileMinor>42</_FileMinor>
      <_FilePatch>42</_FilePatch>
      <_FileRevision>42424</_FileRevision>
      <VersionSuffixDateStamp>42</VersionSuffixDateStamp>
      <VersionSuffixBuildOfTheDay>42424</VersionSuffixBuildOfTheDay>
    </PropertyGroup>

    <ItemGroup>
      <!-- Defining versioning variables -->
      <NativeVersionLines Include="#undef VER_FILEVERSION" />
      <NativeVersionLines Include="#define VER_FILEVERSION             $(_FileMajor),$(_FileMinor),$(_FilePatch),$(_FileRevision)" />

      <NativeVersionLines Include="#undef VER_FILEVERSION_STR" />
      <NativeVersionLines Include="#define VER_FILEVERSION_STR         &quot;$(FileVersion)&quot;" />

      <NativeVersionLines Include="#undef VER_PRODUCTVERSION" />
      <NativeVersionLines Include="#define VER_PRODUCTVERSION          $(_FileMajor),$(_FileMinor),$(VersionSuffixDateStamp),$(VersionSuffixBuildOfTheDay)" />

      <NativeVersionLines Include="#undef VER_PRODUCTVERSION_STR" />
      <NativeVersionLines Include="#define VER_PRODUCTVERSION_STR      &quot;$(InformationalVersion)&quot;" />
    </ItemGroup>

    <WriteLinesToFile File="$(NativeVersionHeaderFile)" Lines="@(NativeVersionLines)" Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(NativeVersionHeaderFile)" />
    </ItemGroup>

    <Message Importance="High" Text="Created version file $(NativeVersionHeaderFile)" />
  </Target>

  <!-- Non Windows versioning requires to generate a source file and include it on the compilation. -->
  <Target Name="GenerateVersionSourceFile" DependsOnTargets="GetAssemblyVersion;AddSourceRevisionToInformationalVersion" Condition="'$(NativeVersionSourceFile)' != '' and '$(GenerateVersionSourceFile)' == 'true' and !Exists($(NativeVersionHeaderFile))">

    <!-- Get Username -->
    <PropertyGroup>
      <VersionUserName Condition="'$(VersionUserName)' == ''">$(USERNAME)</VersionUserName>
    </PropertyGroup>

    <Exec Command="whoami" Condition="'$(VersionUserName)' == ''" StandardOutputImportance="Low" IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="VersionUserName" />
    </Exec>

    <!-- Get Hostname -->
    <PropertyGroup>
      <VersionHostName Condition="'$(VersionHostName)' == ''">$(COMPUTERNAME)</VersionHostName>
    </PropertyGroup>

    <Exec Command="hostname" Condition="'$(RunningOnUnix)'=='true' AND '$(VersionHostName)'==''" StandardOutputImportance="Low" IgnoreExitCode="true" IgnoreStandardErrorWarningFormat="true" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="VersionHostName" />
    </Exec>

    <PropertyGroup>
      <BuiltByString Condition="'$(VersionUserName)' != '' AND '$(VersionHostName)' != ''">$(BuiltByString) %40BuiltBy: $(VersionUserName)-$(VersionHostName)</BuiltByString>
    </PropertyGroup>

    <ItemGroup>
      <SourceFileLines />
      <SourceFileLines Include="static char sccsid%5B%5D %5F%5Fattribute%5F%5F%28%28used%29%29 %3D %22%40%28%23%29Version $(InformationalVersion)$(BuiltByString)%22%3B" />
      <!-- Since this is a source file, compiler will complain if there is no new line at end of file, so adding one bellow. -->
      <SourceFileLines Include=" " />
    </ItemGroup>

    <WriteLinesToFile File="$(NativeVersionSourceFile)" Lines="@(SourceFileLines)" Overwrite="true" />

    <ItemGroup>
      <FileWrites Include="$(NativeVersionSourceFile)" />
    </ItemGroup>

    <Message Importance="High" Text="Created version file $(NativeVersionSourceFile)" />
  </Target>

  <ItemGroup>
    <Compile Remove="**" />
    <EmbeddedResource Remove="**" />
    <None Remove="**" />
  </ItemGroup>

</Project>
