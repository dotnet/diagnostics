<RuleSet Name="Diagnostics Ruleset"
         Description="Diagnostics Ruleset"
         ToolsVersion="14.0">
    <Rules AnalyzerId="Microsoft.Analyzers.ManagedCodeAnalysis" RuleNamespace="Microsoft.Rules.Managed">
        <Rule Id="CA1000" Action="None" />          <!-- Do not declare static members on generic types -->
        <Rule Id="CA1001" Action="None" />          <!-- Types that own disposable fields should be disposable -->
        <Rule Id="CA1003" Action="None" />          <!-- Use generic event handler instances -->
        <Rule Id="CA1008" Action="None" />          <!-- Enums should have zero value -->
        <Rule Id="CA1010" Action="None" />          <!-- Collections should implement generic interface -->
        <Rule Id="CA1012" Action="None" />          <!-- Abstract types should not have constructors -->
        <Rule Id="CA1014" Action="None" />          <!-- Mark assemblies with CLSCompliant -->
        <Rule Id="CA1016" Action="None" />          <!-- Mark assemblies with assembly version -->
        <Rule Id="CA1017" Action="None" />          <!-- Mark assemblies with ComVisible -->
        <Rule Id="CA1018" Action="None" />          <!-- Mark attributes with AttributeUsageAttribute -->
        <Rule Id="CA1019" Action="None" />          <!-- Define accessors for attribute arguments -->
        <Rule Id="CA1024" Action="None" />          <!-- Use properties where appropriate -->
        <Rule Id="CA1027" Action="None" />          <!-- Mark enums with FlagsAttribute -->
        <Rule Id="CA1028" Action="None" />          <!-- Enum Storage should be Int32 -->
        <Rule Id="CA1030" Action="None" />          <!-- Use events where appropriate -->
        <Rule Id="CA1031" Action="None" />          <!-- Do not catch general exception types -->
        <Rule Id="CA1032" Action="None" />          <!-- Implement standard exception constructors -->
        <Rule Id="CA1033" Action="None" />          <!-- Interface methods should be callable by child types -->
        <Rule Id="CA1034" Action="None" />          <!-- Nested types should not be visible -->
        <Rule Id="CA1036" Action="None" />          <!-- Override methods on comparable types -->
        <Rule Id="CA1040" Action="None" />          <!-- Avoid empty interfaces -->
        <Rule Id="CA1041" Action="None" />          <!-- Provide ObsoleteAttribute message -->
        <Rule Id="CA1043" Action="None" />          <!-- Use Integral Or String Argument For Indexers -->
        <Rule Id="CA1044" Action="None" />          <!-- Properties should not be write only -->
        <Rule Id="CA1050" Action="None" />          <!-- Declare types in namespaces -->
        <Rule Id="CA1051" Action="None" />          <!-- Do not declare visible instance fields -->
        <Rule Id="CA1052" Action="None" />          <!-- Static holder types should be Static or NotInheritable -->
        <Rule Id="CA1054" Action="None" />          <!-- Uri parameters should not be strings -->
        <Rule Id="CA1055" Action="None" />          <!-- Uri return values should not be strings -->
        <Rule Id="CA1056" Action="None" />          <!-- Uri properties should not be strings -->
        <Rule Id="CA1058" Action="None" />          <!-- Types should not extend certain base types -->
        <Rule Id="CA1060" Action="None" />          <!-- Move pinvokes to native methods class -->
        <Rule Id="CA1061" Action="None" />          <!-- Do not hide base class methods -->
        <Rule Id="CA1062" Action="None" />          <!-- Validate arguments of public methods -->
        <Rule Id="CA1063" Action="None" />          <!-- Implement IDisposable Correctly -->
        <Rule Id="CA1064" Action="None" />          <!-- Exceptions should be public -->
        <Rule Id="CA1065" Action="None" />          <!-- Do not raise exceptions in unexpected locations -->
        <Rule Id="CA1066" Action="None" />          <!-- Type {0} should implement IEquatable<T> because it overrides Equals -->
        <Rule Id="CA1067" Action="None" />          <!-- Override Object.Equals(object) when implementing IEquatable<T> -->
        <Rule Id="CA1068" Action="None" />          <!-- CancellationToken parameters must come last -->
        <Rule Id="CA1200" Action="Warning" />       <!-- Avoid using cref tags with a prefix -->
        <Rule Id="CA1303" Action="None" />          <!-- Do not pass literals as localized parameters -->
        <Rule Id="CA1304" Action="None" />          <!-- Specify CultureInfo -->
        <Rule Id="CA1305" Action="None" />          <!-- Specify IFormatProvider -->
        <Rule Id="CA1307" Action="None" />          <!-- Specify StringComparison -->
        <Rule Id="CA1308" Action="None" />          <!-- Normalize strings to uppercase -->
        <Rule Id="CA1309" Action="None" />          <!-- Use ordinal stringcomparison -->
        <Rule Id="CA1401" Action="Warning" />       <!-- P/Invokes should not be visible -->
        <Rule Id="CA1501" Action="None" />          <!-- Avoid excessive inheritance -->
        <Rule Id="CA1502" Action="None" />          <!-- Avoid excessive complexity -->
        <Rule Id="CA1505" Action="None" />          <!-- Avoid unmaintainable code -->
        <Rule Id="CA1506" Action="None" />          <!-- Avoid excessive class coupling -->
        <Rule Id="CA1507" Action="Warning" />       <!-- Use nameof to express symbol names -->
        <Rule Id="CA1508" Action="None" />          <!-- Avoid dead conditional code -->
        <Rule Id="CA1509" Action="None" />          <!-- Invalid entry in code metrics rule specification file -->
        <Rule Id="CA1707" Action="None" />          <!-- Identifiers should not contain underscores -->
        <Rule Id="CA1708" Action="None" />          <!-- Identifiers should differ by more than case -->
        <Rule Id="CA1710" Action="None" />          <!-- Identifiers should have correct suffix -->
        <Rule Id="CA1711" Action="None" />          <!-- Identifiers should not have incorrect suffix -->
        <Rule Id="CA1712" Action="None" />          <!-- Do not prefix enum values with type name -->
        <Rule Id="CA1714" Action="None" />          <!-- Flags enums should have plural names -->
        <Rule Id="CA1715" Action="None" />          <!-- Identifiers should have correct prefix -->
        <Rule Id="CA1716" Action="None" />          <!-- Identifiers should not match keywords -->
        <Rule Id="CA1717" Action="None" />          <!-- Only FlagsAttribute enums should have plural names -->
        <Rule Id="CA1720" Action="None" />          <!-- Identifier contains type name -->
        <Rule Id="CA1721" Action="None" />          <!-- Property names should not match get methods -->
        <Rule Id="CA1724" Action="None" />          <!-- Type names should not match namespaces -->
        <Rule Id="CA1725" Action="None" />          <!-- Parameter names should match base declaration -->
        <Rule Id="CA1801" Action="None" />          <!-- Review unused parameters -->
        <Rule Id="CA1802" Action="None" />          <!-- Use literals where appropriate -->
        <Rule Id="CA1806" Action="None" />          <!-- Do not ignore method results -->
        <Rule Id="CA1810" Action="Warning" />       <!-- Initialize reference type static fields inline -->
        <Rule Id="CA1812" Action="None" />          <!-- Avoid uninstantiated internal classes -->
        <Rule Id="CA1813" Action="None" />          <!-- Avoid unsealed attributes -->
        <Rule Id="CA1814" Action="None" />          <!-- Prefer jagged arrays over multidimensional -->
        <Rule Id="CA1815" Action="None" />          <!-- Override equals and operator equals on value types -->
        <Rule Id="CA1816" Action="None" />          <!-- Dispose methods should call SuppressFinalize -->
        <Rule Id="CA1819" Action="None" />          <!-- Properties should not return arrays -->
        <Rule Id="CA1820" Action="None" />          <!-- Test for empty strings using string length -->
        <Rule Id="CA1821" Action="Warning" />       <!-- Remove empty Finalizers -->
        <Rule Id="CA1822" Action="None" />          <!-- Mark members as static -->
        <Rule Id="CA1823" Action="Warning" />       <!-- Avoid unused private fields -->
        <Rule Id="CA1824" Action="Warning" />       <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->
        <Rule Id="CA1825" Action="Warning" />       <!-- Avoid zero-length array allocations. -->
        <Rule Id="CA1826" Action="Warning" />       <!-- Do not use Enumerable methods on indexable collections. Instead use the collection directly -->
        <Rule Id="CA1827" Action="Warning" />       <!-- Do not use Count() or LongCount() when Any() can be used -->
        <Rule Id="CA1828" Action="Warning" />       <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used -->
        <Rule Id="CA1829" Action="Warning" />       <!-- Use Length/Count property instead of Count() when available -->
        <Rule Id="CA2000" Action="None" />          <!-- Dispose objects before losing scope -->
        <Rule Id="CA2002" Action="None" />          <!-- Do not lock on objects with weak identity -->
        <Rule Id="CA2007" Action="None" />          <!-- Consider calling ConfigureAwait on the awaited task -->
        <Rule Id="CA2008" Action="None" />          <!-- Do not create tasks without passing a TaskScheduler -->
        <Rule Id="CA2009" Action="Warning" />       <!-- Do not call ToImmutableCollection on an ImmutableCollection value -->
        <Rule Id="CA2010" Action="None" />          <!-- Always consume the value returned by methods marked with PreserveSigAttribute -->
        <Rule Id="CA2100" Action="None" />          <!-- Review SQL queries for security vulnerabilities -->
        <Rule Id="CA2101" Action="None" />          <!-- Specify marshaling for P/Invoke string arguments -->
        <Rule Id="CA2119" Action="None" />          <!-- Seal methods that satisfy private interfaces -->
        <Rule Id="CA2200" Action="Warning" />       <!-- Rethrow to preserve stack details. -->
        <Rule Id="CA2201" Action="None" />          <!-- Do not raise reserved exception types -->
        <Rule Id="CA2207" Action="Warning" />       <!-- Initialize value type static fields inline -->
        <Rule Id="CA2208" Action="None" />          <!-- Instantiate argument exceptions correctly -->
        <Rule Id="CA2211" Action="None" />          <!-- Non-constant fields should not be visible -->
        <Rule Id="CA2213" Action="None" />          <!-- Disposable fields should be disposed -->
        <Rule Id="CA2214" Action="None" />          <!-- Do not call overridable methods in constructors -->
        <Rule Id="CA2215" Action="None" />           <!-- Dispose methods should call base class dispose -->
        <Rule Id="CA2216" Action="None" />          <!-- Disposable types should declare finalizer -->
        <Rule Id="CA2217" Action="None" />          <!-- Do not mark enums with FlagsAttribute -->
        <Rule Id="CA2218" Action="None" />          <!-- Override GetHashCode on overriding Equals -->
        <Rule Id="CA2219" Action="None" />          <!-- Do not raise exceptions in finally clauses -->
        <Rule Id="CA2224" Action="None" />          <!-- Override Equals on overloading operator equals -->
        <Rule Id="CA2225" Action="None" />          <!-- Operator overloads have named alternates -->
        <Rule Id="CA2226" Action="None" />          <!-- Operators should have symmetrical overloads -->
        <Rule Id="CA2227" Action="None" />          <!-- Collection properties should be read only -->
        <Rule Id="CA2229" Action="Warning" />       <!-- Implement serialization constructors -->
        <Rule Id="CA2231" Action="None" />          <!-- Overload operator equals on overriding value type Equals -->
        <Rule Id="CA2234" Action="None" />          <!-- Pass system uri objects instead of strings -->
        <Rule Id="CA2235" Action="None" />          <!-- Mark all non-serializable fields -->
        <Rule Id="CA2237" Action="None" />          <!-- Mark ISerializable types with serializable -->
        <Rule Id="CA2241" Action="Warning" />       <!-- Provide correct arguments to formatting methods -->
        <Rule Id="CA2242" Action="Warning" />       <!-- Test for NaN correctly -->
        <Rule Id="CA2243" Action="Warning" />       <!-- Attribute string literals should parse correctly -->
        <Rule Id="CA2244" Action="Warning" />       <!-- Do not duplicate indexed element initializations -->
        <Rule Id="CA2245" Action="Warning" />       <!-- Do not assign a property to itself. -->
        <Rule Id="CA2246" Action="None" />          <!-- Assigning symbol and its member in the same statement. -->
        <Rule Id="CA2300" Action="None" />          <!-- Do not use insecure deserializer BinaryFormatter -->
        <Rule Id="CA2310" Action="None" />          <!-- Do not use insecure deserializer NetDataContractSerializer -->
        <Rule Id="CA2326" Action="None" />          <!-- Do not use TypeNameHandling values other than None -->
        <Rule Id="CA5360" Action="Warning" />       <!-- Do Not Call Dangerous Methods In Deserialization -->
        <Rule Id="CA5362" Action="None" />          <!-- Do Not Refer Self In Serializable Class -->
        <Rule Id="CA5363" Action="Warning" />       <!-- Do Not Disable Request Validation -->
        <Rule Id="CA5365" Action="Warning" />       <!-- Do Not Disable HTTP Header Checking -->
        <Rule Id="CA5366" Action="None" />          <!-- Use XmlReader For DataSet Read Xml -->
        <Rule Id="CA5367" Action="None" />          <!-- Do Not Serialize Types With Pointer Fields -->
        <Rule Id="CA5368" Action="Warning" />       <!-- Set ViewStateUserKey For Classes Derived From Page -->
        <Rule Id="CA5369" Action="None" />          <!-- Use XmlReader For Deserialize -->
        <Rule Id="CA5370" Action="Warning" />       <!-- Use XmlReader For Validating Reader -->
        <Rule Id="CA5371" Action="None" />          <!-- Use XmlReader For Schema Read -->
        <Rule Id="CA5372" Action="None" />          <!-- Use XmlReader For XPathDocument -->
        <Rule Id="CA5373" Action="Warning" />       <!-- Do not use obsolete key derivation function -->
        <Rule Id="CA5374" Action="Warning" />       <!-- Do Not Use XslTransform -->
        <Rule Id="CA5375" Action="None" />          <!-- Do Not Use Account Shared Access Signature -->
        <Rule Id="CA5376" Action="Warning" />       <!-- Use SharedAccessProtocol HttpsOnly -->
        <Rule Id="CA5377" Action="Warning" />       <!-- Use Container Level Access Policy -->
        <Rule Id="CA5379" Action="Warning" />       <!-- Do Not Use Weak Key Derivation Function Algorithm -->
        <Rule Id="CA5382" Action="None" />          <!-- Use Secure Cookies In ASP.Net Core -->
        <Rule Id="CA5383" Action="None" />          <!-- Ensure Use Secure Cookies In ASP.Net Core -->
        <Rule Id="CA5384" Action="Warning" />       <!-- Do Not Use Digital Signature Algorithm (DSA) -->
        <Rule Id="CA5385" Action="Warning" />       <!-- Use Rivest–Shamir–Adleman (RSA) Algorithm With Sufficient Key Size -->
        <Rule Id="CA5387" Action="None" />          <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count -->
        <Rule Id="CA5388" Action="None" />          <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function -->
        <Rule Id="CA5389" Action="None" />          <!-- Do Not Add Archive Item's Path To The Target File System Path -->
        <Rule Id="CA5390" Action="None" />          <!-- Do not hard-code encryption key -->
        <Rule Id="CA5392" Action="None" />          <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes -->
        <Rule Id="CA5393" Action="None" />          <!-- Do not use unsafe DllImportSearchPath value -->
        <Rule Id="CA5394" Action="None" />          <!-- Do not use insecure randomness -->
        <Rule Id="CA5399" Action="None" />          <!-- HttpClients should enable certificate revocation list checks -->
        <Rule Id="CA5400" Action="None" />          <!-- Ensure HttpClient certificate revocation list check is not disabled -->
        <Rule Id="CA5401" Action="None" />          <!-- Do not use CreateEncryptor with non-default IV -->
        <Rule Id="CA5402" Action="None" />          <!-- Use CreateEncryptor with the default IV  -->
        <Rule Id="CA5403" Action="None" />          <!-- Do not hard-code certificate -->
        <Rule Id="CA9999" Action="Warning" />       <!-- Analyzer version mismatch -->
    </Rules>
</RuleSet>