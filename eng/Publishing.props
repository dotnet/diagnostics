<Project>

  <PropertyGroup>
    <PublishDependsOnTargets>$(PublishDependsOnTargets);CollectPackageArtifactFiles</PublishDependsOnTargets>
  </PropertyGroup>

  <ItemGroup>
    <PackageFile Include="$(ArtifactsShippingPackagesDir)**\*.nupkg" IsShipping="true" />
    <PackageFile Include="$(ArtifactsNonShippingPackagesDir)**\*.nupkg" IsShipping="false" />
  </ItemGroup>

  <!-- Run the CollectPackageArtifactFiles target on each PackageFile by target batching on a non-existing file.
       This allows using the ReadLinesFromFile task to read the blob group file, which was written with WriteLinesToFile,
       thus avoiding erroneously reading in the newline at the end of the blob group file. -->
  <Target Name="CollectPackageArtifactFiles"
          Inputs="@(PackageFile)"
          Outputs="%(PackageFile.Identity).notexist">

    <!-- Find the artifact files next to the package file. -->
    <PropertyGroup>
      <_BlobGroupFilePath>%(PackageFile.FullPath).blobgroup</_BlobGroupFilePath>
      <_ChecksumFilePath>%(PackageFile.FullPath).sha512</_ChecksumFilePath>
    </PropertyGroup>    

    <!-- Read in blob group name, if it exists -->
    <ReadLinesFromFile File="$(_BlobGroupFilePath)" Condition="Exists('$(_BlobGroupFilePath)')">
      <Output TaskParameter="Lines" PropertyName="_BlobGroupName"/>
    </ReadLinesFromFile>

    <!-- Calculate manifest artifact data for each file type. -->
    <ItemGroup>
      <_CommonArtifactData Include="NonShipping=true" Condition="'%(PackageFile.IsShipping)' != 'true'" />
    </ItemGroup>
    <ItemGroup>
      <_PackageArtifactData Include="@(_CommonArtifactData)" />
      <!-- Setting Category to Other will upload to installers blob feed. -->
      <!-- Feed configuration categories are uppercase and case sensitive in PublishArtifactsInManifest task. -->
      <_PackageArtifactData Include="Category=OTHER" />
    </ItemGroup>

    <!-- Capture each blob item to upload to blob feed -->
    <ItemGroup>
      <_BlobItem Include="%(PackageFile.FullPath)">
        <ManifestArtifactData>@(_PackageArtifactData)</ManifestArtifactData>
      </_BlobItem>
      <_BlobItem Include="$(_ChecksumFilePath)" Condition="Exists('$(_ChecksumFilePath)')">
        <ManifestArtifactData Condition="'@(_CommonArtifactData)' != ''">@(_CommonArtifactData)</ManifestArtifactData>
      </_BlobItem>
    </ItemGroup>

    <!-- Add artifact items to be pushed to blob feed -->
    <ItemGroup>      
      <ItemsToPushToBlobFeed Include="@(_BlobItem)" Condition="'$(_BlobGroupName)' != ''">
        <RelativeBlobPath>diagnostics/$(_BlobGroupName)/%(_BlobItem.Filename)%(_BlobItem.Extension)</RelativeBlobPath>
        <PublishFlatContainer>true</PublishFlatContainer>
      </ItemsToPushToBlobFeed>
    </ItemGroup>
  </Target>

</Project>