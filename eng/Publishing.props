<Project>

  <PropertyGroup>
    <PublishDependsOnTargets>$(PublishDependsOnTargets);CollectPackageArtifactFiles</PublishDependsOnTargets>
  </PropertyGroup>

  <ItemGroup>
    <PackageFile Include="$(ArtifactsShippingPackagesDir)**\*.nupkg" IsShipping="true" />
    <PackageFile Include="$(ArtifactsNonShippingPackagesDir)**\*.nupkg" IsShipping="false" />
  </ItemGroup>

  <!-- Run the CollectPackageArtifactFiles target on each PackageFile by target batching on a non-existing file.
       This allows using the ReadLinesFromFile task to read the blob group file, which was written with WriteLinesToFile,
       thus avoiding erroneously reading in the newline at the end of the blob group file. -->
  <Target Name="CollectPackageArtifactFiles"
          Inputs="@(PackageFile)"
          Outputs="%(PackageFile.Identity).notexist">
    <!-- Find the artifact files next to the package file. -->
    <PropertyGroup>
      <_BlobGroupFilePath>%(PackageFile.FullPath).blobgroup</_BlobGroupFilePath>
      <_ChecksumFilePath>%(PackageFile.FullPath).sha512</_ChecksumFilePath>
      <_VersionFilePath>%(PackageFile.FullPath).version</_VersionFilePath>
    </PropertyGroup>    
    <!-- Read in blob group name, if it exists -->
    <ReadLinesFromFile File="$(_BlobGroupFilePath)" Condition="Exists('$(_BlobGroupFilePath)')">
      <Output TaskParameter="Lines" PropertyName="_BlobGroupName"/>
    </ReadLinesFromFile>
    <ItemGroup>
      <!-- Capture package checksum artifact -->
      <_PackageArtifact Include="$(_ChecksumFilePath)" Condition="Exists('$(_ChecksumFilePath)')" />
      <!-- Capture version checksum artifact -->
      <_PackageArtifact Include="$(_VersionFilePath)" Condition="Exists('$(_VersionFilePath)')" />
    </ItemGroup>
    <ItemGroup>
      <!-- Add artifact items to be pushed to blob feed -->
      <ItemsToPushToBlobFeed Include="%(_PackageArtifact.Identity)" Condition="'$(_BlobGroupName)' != ''">
        <RelativeBlobPath>diagnostics/$(_BlobGroupName)/%(_PackageArtifact.Filename)%(_PackageArtifact.Extension)</RelativeBlobPath>
        <ManifestArtifactData Condition="'%(PackageFile.IsShipping)' != 'true'">NonShipping=true</ManifestArtifactData>
        <PublishFlatContainer>true</PublishFlatContainer>
      </ItemsToPushToBlobFeed>
    </ItemGroup>
  </Target>

</Project>