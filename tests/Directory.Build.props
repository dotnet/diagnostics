<Project>
  <Import Project="$(MSBuildThisFileDirectory)..\Directory.Build.props"/>
  <!--<Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />-->
  <Import Project="$(RepositoryEngineeringDir)AuxMsbuildFiles\SdkPackOverrides.targets"/>

  <PropertyGroup>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup>
    <AuxMSBuildRootDir>$([MSBuild]::NormalizeDirectory('$(RepoRoot)', 'eng', 'AuxMsbuildFiles'))</AuxMSBuildRootDir>
    <DebuggeeSourceRootDir>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)', 'Debuggees'))</DebuggeeSourceRootDir>
    <DebuggeeArtifactsRootDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'debuggees'))</DebuggeeArtifactsRootDir>
    <PackageArtifactsRootDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'packages'))</PackageArtifactsRootDir>
    <DebuggerVersionConfigFileName>$([MSBuild]::NormalizePath('$(ArtifactsBinDir)', 'Debugger.Tests.Versions.txt'))</DebuggerVersionConfigFileName>
  </PropertyGroup>

  <PropertyGroup>
    <TestArchiveRoot>$(ArtifactsDir)helix/</TestArchiveRoot>
    <TestArchiveTestsDir>$(TestArchiveRoot)tests/</TestArchiveTestsDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ArchiveTests)' == 'true'">
    <TestRepoRoot>.</TestRepoRoot>
    <TestPackageArtifactsRootDir>packages</TestPackageArtifactsRootDir>
    <TestAuxMSBuildRootDir>eng/AuxMsbuildFiles</TestAuxMSBuildRootDir>
    <TestVersionConfigDir>.</TestVersionConfigDir>
    <TestNativeDir>native</TestNativeDir>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ArchiveTests)' != 'true'">
    <TestRepoRoot>$(RepoRoot)</TestRepoRoot>
    <TestDotNetRootDir>$(DotNetInstallRoot)</TestDotNetRootDir>
    <TestPackageArtifactsRootDir>$(NuGetPackageRoot)</TestPackageArtifactsRootDir>
    <TestAuxMSBuildRootDir>$(AuxMSBuildRootDir)</TestAuxMSBuildRootDir>
    <TestVersionConfigDir>$(ArtifactsBinDir)</TestVersionConfigDir>
    <TestNativeDir>$(ArtifactsBinNativeDir)</TestNativeDir>
  </PropertyGroup>

  <PropertyGroup>
    <IsTestProject Condition="$(MSBuildProjectName.EndsWith('.UnitTests')) or $(MSBuildProjectName.EndsWith('.Tests'))">true</IsTestProject>
    <IsTestSupportProject Condition="'$(IsTestProject)' != 'true' and '$(IsTrimmingTestProject)' != 'true'">true</IsTestSupportProject>
  </PropertyGroup>
</Project>
